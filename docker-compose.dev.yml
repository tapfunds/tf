services:
  auth:
    container_name: auth
    env_file:
      - ./auth/.env
    build:
      context: ./auth
      dockerfile: Dockerfile.dev
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      - ./auth:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - dev
    command: nodemon server.js
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 5

  plaid:
    container_name: plaid_service
    env_file:
      - ./plaid/.env
    build:
      context: ./plaid
      dockerfile: Dockerfile.dev
    ports:
      - 8000:8000
    restart: on-failure
    volumes:
      - ./plaid:/usr/src/app
    networks:
      - dev
    depends_on:
      - auth
  client:
    container_name: client
    env_file:
      - ./client/.env
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    restart: on-failure
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - dev
    command: yarn dev
    depends_on:
      - auth
      - plaid

  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dev_db
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - dev

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 5050:80
    networks:
      - dev
    depends_on:
      - db
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json

networks:
  dev:
    driver: bridge

volumes:
  db-data:
