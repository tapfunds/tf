version: "3.9"

services:
  goneo4j:
    container_name: goneo4j_map_service
    depends_on:
      - "neo4j"
    env_file:
      - ./objectmapper/.env
    build:
      context: .
      dockerfile: ./objectmapper/Dockerfile.dev
    restart: on-failure
    networks:
      - tap
      - neo4j-net
    ports:
      - '1738:1738'

  goauth:
    container_name: auth_service 
    env_file:
      - ./auth/.env
    build:
      context: .
      dockerfile: ./auth/Dockerfile.dev
    ports:
      - 8080:8080
    restart: on-failure
    volumes:              # without this volume mapping to the directory of our project, live reloading wont happen
      - .:/usr/src/app

  plaid:
    container_name: plaid_service 
    env_file:
      - ./plaid/.env
    build:
      context: .
      dockerfile: ./plaid/Dockerfile.dev
    ports:
      - 8000:8000
    restart: 
      on-failure
    networks:
      - tap

  client:
    container_name: client_service
    stdin_open: true
    env_file:
      - ./tfclient/.env
    build:
      context: .
      dockerfile: ./tfclient/Dockerfile.dev
    ports:
      - 80:80
    restart: on-failure
    volumes:              # without this volume mapping to the directory of our project, live reloading wont happen
      - .:/usr/src/app/

  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: rabbitmq
  #   volumes:
  #       - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
  #       - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
  #       - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
  #   environment:
  #       RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
  #       RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
  #       RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
  #   ports:
  #       - 5672:5672
  #       - 15672:15672

  neo4j:
      container_name: neo4j_service
      image: neo4j:latest
      volumes:
        - ./.docker/neo4j/data:/data
        - ./.docker/neo4j/logs:/logs
        - ./.docker/neo4j/import:/var/lib/neo4j/import
        - ./.docker/neo4j/plugins:/plugins
        - ./.docker/neo4j/conf:/conf
      restart: always
      environment:
        - NEO4J_AUTH=neo4j/changeme
        - NEO4J_dbms_security_procedures_unrestricted=apoc.*
        - NEO4J_dbms_security_procedures_whitelist=apoc.*
        - NEO4J_apoc_import_file_enabled=true
        - NEO4J_apoc_uuid_enabled=true
        - NEO4JLABS_PLUGINS=["apoc"]
      networks:
        - neo4j-net
      ports:
        - '7474:7474'
        - '7687:7687'

# Networks to be created to facilitate communication between containers
networks: 
  tap:
    driver: 'bridge'
  neo4j-net:
    driver: 'bridge'